# This is a basic workflow to help you get started with Actions

name: Build Loudrr

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    paths:
      - "app/**"
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      PASS: ${{ secrets.SSH_PASS }}
      USER: ${{ secrets.SSH_PASS }}
      SERVER: ${{ secrets.STAGING_SERVER }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DN_NAME }}
      NEXT_PUBLIC_BRAND_NAME: ${{ secrets.NEXT_PUBLIC_BRAND_NAME }}
      HOST: ${{ secrets.HOST }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install Yarn
        run: npm install -g yarn

      - name: Install sshpass
        run: |
          sudo apt-get -y install sshpass
          sudo apt-get -y install zip unzip
       
      # Runs a set of commands using the runners shell
      - name: build the artifact.
        run: |
          cd app
          echo $env
          yarn && yarn build
          zip -r build.zip .next
          ls
          
      - name: Deploy artifact
        run: |
          cd app
          echo "sudo sshpass -p \"${PASS}\" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build.zip $USER@$SERVER:/home/$USER/experiments/loudrr-staging/"
          echo "sudo sshpass -p \"${PASS}\" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$SERVER \"cd /home/$USER/experiments/loudrr-staging/.next; pm2 start yarn --name loudrr-staging2 -- start;\""
          sudo sshpass -p \"${PASS}\" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build.zip $USER@$SERVER:/home/$USER/experiments/loudrr-staging/
          sudo sshpass -p \"${PASS}\" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$SERVER "cd /home/$USER/experiments/loudrr-staging/.next; pm2 start yarn --name loudrr-staging2 -- start;"

        
      - name:  Upload the Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: build-output
          path: ./**/build.zip
          if-no-files-found: error

          
 
